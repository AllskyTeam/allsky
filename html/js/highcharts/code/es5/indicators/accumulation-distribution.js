!/**
 * Highstock JS v12.1.2 (2025-01-09)
 * @module highcharts/indicators/accumulation-distribution
 * @requires highcharts
 * @requires highcharts/modules/stock
 *
 * Indicator series type for Highcharts Stock
 *
 * (c) 2010-2024 Sebastian Bochan
 *
 * License: www.highcharts.com/license
 */function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("highcharts"),require("highcharts").SeriesRegistry):"function"==typeof define&&define.amd?define("highcharts/indicators/accumulation-distribution",[["highcharts/highcharts"],["highcharts/highcharts","SeriesRegistry"]],e):"object"==typeof exports?exports["highcharts/indicators/accumulation-distribution"]=e(require("highcharts"),require("highcharts").SeriesRegistry):t.Highcharts=e(t.Highcharts,t.Highcharts.SeriesRegistry)}(this,function(t,e){return function(){"use strict";var r,n={512:function(t){t.exports=e},944:function(e){e.exports=t}},o={};function i(t){var e=o[t];if(void 0!==e)return e.exports;var r=o[t]={exports:{}};return n[t](r,r.exports,i),r.exports}i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,{a:e}),e},i.d=function(t,e){for(var r in e)i.o(e,r)&&!i.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)};var u={};i.d(u,{default:function(){return v}});var a=i(944),s=i.n(a),c=i(512),h=i.n(c),p=(r=function(t,e){return(r=Object.setPrototypeOf||({__proto__:[]})instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),f=h().seriesTypes.sma,l=s().error,g=s().extend,d=s().merge,y=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return p(e,t),e.populateAverage=function(t,e,r,n,o){var i=e[n][1],u=e[n][2],a=e[n][3],s=r[n];return[t[n],a===i&&a===u||i===u?0:(2*a-u-i)/(i-u)*s]},e.prototype.getValues=function(t,r){var n,o,i,u=r.period,a=t.xData,s=t.yData,c=r.volumeSeriesID,h=t.chart.get(c),p=null==h?void 0:h.getColumn("y"),f=s?s.length:0,g=[],d=[],y=[];if(!(a.length<=u)||!f||4===s[0].length){if(!h){l("Series "+c+" not found! Check `volumeSeriesID`.",!0,t.chart);return}for(o=u;o<f;o++)n=g.length,i=e.populateAverage(a,s,p,o,u),n>0&&(i[1]+=g[n-1][1]),g.push(i),d.push(i[0]),y.push(i[1]);return{values:g,xData:d,yData:y}}},e.defaultOptions=d(f.defaultOptions,{params:{index:void 0,volumeSeriesID:"volume"}}),e}(f);g(y.prototype,{nameComponents:!1,nameBase:"Accumulation/Distribution"}),h().registerSeriesType("ad",y);var v=s();return u.default}()});