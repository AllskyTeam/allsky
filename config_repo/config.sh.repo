#!/bin/bash

# Choose between ZWO or RPiHQ or auto (prefers ZWO if present)
CAMERA="auto"

# Set to true to upload current image to your website
UPLOAD_IMG=false

# Set to true to upload timelapse video to your website at the end of each night
UPLOAD_VIDEO=false

# Set to true to send data to your server at the end of each night
POST_END_OF_NIGHT_DATA=false

# Set to true to generate a timelapse at the end of the night
TIMELAPSE=true

# Set the width and height parameter for timelapse generation (sizes must be divisible by 2)
TIMELAPSEWIDTH=0
TIMELAPSEHEIGHT=0

# Set the bitrate of the timelapse video.  Higher numbers will produce higher quality but larger files.
TIMELAPSE_BITRATE="2000k"

# Timelapse frame rate (number of frames per second)
FPS=25

# Encoder for timelapse. May be changed to use a hardware encoder or different codec
VCODEC=libx264

# Set to true to generate a keogram at the end of the night (image summary of the night)
KEOGRAM=true

# Set to true to upload the keogram after it has been generated
UPLOAD_KEOGRAM=false

# Set to true to generate a startrails image of the night. Will skip brighter images to avoid over-exposure
STARTRAILS=true

# Images with a brightness higher than the threshold will be skipped for startrails image generation
BRIGHTNESS_THRESHOLD=0.1

# Set to true to upload the startrails after it has been generated
UPLOAD_STARTRAILS=false

# Set to true to enable automatic deletion of archived data (images + videos)
AUTO_DELETE=true

# Set this value to the number of archived nights you want to keep. Needs AUTO_DELETE=true to work
NIGHTS_TO_KEEP=14

# Set to true if you want to enable dark frame subtraction on your night time images
DARK_FRAME_SUBTRACTION=false

# Set to 0 to disable Daytime Capture
DAYTIME=1

# Set 24Hr capture to true to save both night and day images to disk. By default, only night images are saved.
CAPTURE_24HR=false

# Resize images before cropping and saving. Adjust width and height according to your own sensor ratio
IMG_RESIZE=false
IMG_HEIGHT=1520
IMG_WIDTH=2028

# Crop the captured image, used to improve the images when using a fisheye lens
CROP_IMAGE=false
CROP_WIDTH=640
CROP_HEIGHT=480
CROP_OFFSET_X=0
CROP_OFFSET_Y=0

# Auto stretch images saved at night
AUTO_STRETCH=false
AUTO_STRETCH_AMOUNT=10
AUTO_STRETCH_MID_POINT=10%

# Resize uploaded images.  Change the size to fit your sensor.
RESIZE_UPLOADS=false
RESIZE_UPLOADS_SIZE=962x720

# Size of thumbnails
THUMBNAIL_SIZE_X=100
THUMBNAIL_SIZE_Y=75

# Scan for, and remove corrupt images before generating keograms and startrails.
# This can take several (tens of) minutes to run and isn't necessary unless your system produces
# corrupt images which then generate funny colors in the summary images...
REMOVE_BAD_IMAGES=false

# Images whose mean brightness is less than THRESHOLD_LOW or over THRESHOLD_HIGH
# percent (max: 100) will be removed.  Set to 0 to disable the brightness checks.
REMOVE_BAD_IMAGES_THRESHOLD_LOW=1; export REMOVE_BAD_IMAGES_THRESHOLD_LOW
REMOVE_BAD_IMAGES_THRESHOLD_HIGH=90; export REMOVE_BAD_IMAGES_THRESHOLD_HIGH

# The uhubctl command can reset the USB bus if the camera isn't found and you know it's there.
# Allsky.sh uses this to often fix "missing" cameras.  Specify the path to the command and the USB bus number
# (on a Pi 4, bus 1 is USB 2.0 and bus 2 is the USB 3.0 ports).
# If you don't have 'uhubctl' installed set UHUBCTL_PATH to "".
UHUBCTL_PATH=""
UHUBCTL_PORT=2

# IMG_DIR is the location of the image that the websites use.
# It must have nothing after the trailing double quote (i.e., no comments).
# "allsky" is /var/www/html/allsky/.    "current" is /home/pi/allsky.
# If you use "current" and have the website, prepend "/current/" to the "imageName" in /var/www/html/allsky/config.js,
# for example:  imageName: "/current/liveview-image.jpg",
# Useing "current" avoids copying the image to the website.
IMG_DIR="current"

# Set an optional prefix on the website image file name, before "$FILENAME.$EXTENSION".
# This must match what the local web site thinks the name is (see /var/www/html/allsky/config.js).
# IMG_PREFIX must have nothing after the trailing double quote (i.e., no comments).
# Recommend NOT to set to "" because the websites may try to read the file while it's being modified.
IMG_PREFIX="liveview-"

# Path to the camera settings (exposure, gain, delay, overlay, etc)
CAMERA_SETTINGS_DIR="${ALLSKY_HOME}/config"

if [[ $CAMERA == "auto" ]]; then
  # restore currently saved autodiscovered camera mode if any
  source "$ALLSKY_HOME/config/autocam.sh"
fi

if [[ $CAMERA != "auto" ]]; then
  CAMERA_SETTINGS="$CAMERA_SETTINGS_DIR/settings_$CAMERA.json"

  # So scripts can conditionally ouput messages; DO NOT CHANGE NEXT LINES.
  ALLSKY_DEBUG_LEVEL=$(jq -r '.debuglevel' "${CAMERA_SETTINGS}")
fi

if [[ $CAMERA != "auto" ]]; then
  CAMERA_SETTINGS="$CAMERA_SETTINGS_DIR/settings_$CAMERA.json"
 
  # So scripts can conditionally ouput messages; DO NOT CHANGE NEXT LINES.
  ALLSKY_DEBUG_LEVEL=$(jq -r '.debuglevel' "${CAMERA_SETTINGS}")
fi

ALLSKY_DEBUG_LEVEL=${ALLSKY_DEBUG_LEVEL:-0}
