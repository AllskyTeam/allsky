{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v12.1.2 (2025-01-09)\n * @module highcharts/modules/solid-gauge\n * @requires highcharts\n * @requires highcharts/highcharts-more\n *\n * Solid angular gauge module\n *\n * (c) 2010-2024 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"highcharts\"), require(\"highcharts\")[\"SeriesRegistry\"], require(\"highcharts\")[\"Color\"]);\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"highcharts/modules/solid-gauge\", [[\"highcharts/highcharts\"], [\"highcharts/highcharts\",\"SeriesRegistry\"], [\"highcharts/highcharts\",\"Color\"]], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"highcharts/modules/solid-gauge\"] = factory(require(\"highcharts\"), require(\"highcharts\")[\"SeriesRegistry\"], require(\"highcharts\")[\"Color\"]);\n\telse\n\t\troot[\"Highcharts\"] = factory(root[\"Highcharts\"], root[\"Highcharts\"][\"SeriesRegistry\"], root[\"Highcharts\"][\"Color\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__512__, __WEBPACK_EXTERNAL_MODULE__620__) {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 620:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__620__;\n\n/***/ }),\n\n/***/ 512:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__512__;\n\n/***/ }),\n\n/***/ 944:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__944__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ solid_gauge_src; }\n});\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\"],\"commonjs\":[\"highcharts\"],\"commonjs2\":[\"highcharts\"],\"root\":[\"Highcharts\"]}\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_ = __webpack_require__(944);\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default = /*#__PURE__*/__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);\n;// ./code/es5/es-modules/Extensions/BorderRadius.js\n/* *\n *\n *  Highcharts Border Radius module\n *\n *  Author: Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar defaultOptions = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).defaultOptions;\n\nvar noop = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).noop;\n\nvar addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend, isObject = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isObject, merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, relativeLength = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).relativeLength;\n/* *\n *\n *  Constants\n *\n * */\nvar defaultBorderRadiusOptions = {\n    radius: 0,\n    scope: 'stack',\n    where: void 0\n};\n/* *\n *\n *  Variables\n *\n * */\nvar oldArc = noop;\nvar oldRoundedRect = noop;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction applyBorderRadius(path, i, r) {\n    var a = path[i];\n    var b = path[i + 1];\n    if (b[0] === 'Z') {\n        b = path[0];\n    }\n    var line,\n        arc,\n        fromLineToArc;\n    // From straight line to arc\n    if ((a[0] === 'M' || a[0] === 'L') && b[0] === 'A') {\n        line = a;\n        arc = b;\n        fromLineToArc = true;\n        // From arc to straight line\n    }\n    else if (a[0] === 'A' && (b[0] === 'M' || b[0] === 'L')) {\n        line = b;\n        arc = a;\n    }\n    if (line && arc && arc.params) {\n        var bigR = arc[1], \n            // In our use cases, outer pie slice arcs are clockwise and inner\n            // arcs (donut/sunburst etc) are anti-clockwise\n            clockwise = arc[5], params = arc.params, start = params.start, end = params.end, cx = params.cx, cy = params.cy;\n        // Some geometric constants\n        var relativeR = clockwise ? (bigR - r) : (bigR + r), \n            // The angle, on the big arc, that the border radius arc takes up\n            angleOfBorderRadius = relativeR ? Math.asin(r / relativeR) : 0,\n            angleOffset = clockwise ?\n                angleOfBorderRadius :\n                -angleOfBorderRadius, \n            // The distance along the radius of the big arc to the starting\n            // point of the small border radius arc\n            distanceBigCenterToStartArc = (Math.cos(angleOfBorderRadius) *\n                relativeR);\n        // From line to arc\n        if (fromLineToArc) {\n            // Update the cache\n            params.start = start + angleOffset;\n            // First move to the start position at the radial line. We want to\n            // start one borderRadius closer to the center.\n            line[1] = cx + distanceBigCenterToStartArc * Math.cos(start);\n            line[2] = cy + distanceBigCenterToStartArc * Math.sin(start);\n            // Now draw an arc towards the point where the small circle touches\n            // the great circle.\n            path.splice(i + 1, 0, [\n                'A',\n                r,\n                r,\n                0, // Slanting,\n                0, // Long arc\n                1, // Clockwise\n                cx + bigR * Math.cos(params.start),\n                cy + bigR * Math.sin(params.start)\n            ]);\n            // From arc to line\n        }\n        else {\n            // Update the cache\n            params.end = end - angleOffset;\n            // End the big arc a bit earlier\n            arc[6] = cx + bigR * Math.cos(params.end);\n            arc[7] = cy + bigR * Math.sin(params.end);\n            // Draw a small arc towards a point on the end angle, but one\n            // borderRadius closer to the center relative to the perimeter.\n            path.splice(i + 1, 0, [\n                'A',\n                r,\n                r,\n                0,\n                0,\n                1,\n                cx + distanceBigCenterToStartArc * Math.cos(end),\n                cy + distanceBigCenterToStartArc * Math.sin(end)\n            ]);\n        }\n        // Long or short arc must be reconsidered because we have modified the\n        // start and end points\n        arc[4] = Math.abs(params.end - params.start) < Math.PI ? 0 : 1;\n    }\n}\n/**\n * Extend arc with borderRadius.\n * @private\n */\nfunction arc(x, y, w, h, options) {\n    if (options === void 0) { options = {}; }\n    var path = oldArc(x,\n        y,\n        w,\n        h,\n        options),\n        _a = options.innerR,\n        innerR = _a === void 0 ? 0 : _a,\n        _b = options.r,\n        r = _b === void 0 ? w : _b,\n        _c = options.start,\n        start = _c === void 0 ? 0 : _c,\n        _d = options.end,\n        end = _d === void 0 ? 0 : _d;\n    if (options.open || !options.borderRadius) {\n        return path;\n    }\n    var alpha = end - start,\n        sinHalfAlpha = Math.sin(alpha / 2),\n        borderRadius = Math.max(Math.min(relativeLength(options.borderRadius || 0,\n        r - innerR), \n        // Cap to half the sector radius\n        (r - innerR) / 2, \n        // For smaller pie slices, cap to the largest small circle that\n        // can be fitted within the sector\n        (r * sinHalfAlpha) / (1 + sinHalfAlpha)), 0), \n        // For the inner radius, we need an extra cap because the inner arc\n        // is shorter than the outer arc\n        innerBorderRadius = Math.min(borderRadius, 2 * (alpha / Math.PI) * innerR);\n    // Apply turn-by-turn border radius. Start at the end since we're\n    // splicing in arc segments.\n    var i = path.length - 1;\n    while (i--) {\n        applyBorderRadius(path, i, i > 1 ? innerBorderRadius : borderRadius);\n    }\n    return path;\n}\n/** @private */\nfunction seriesOnAfterColumnTranslate() {\n    var _a,\n        _b;\n    if (this.options.borderRadius &&\n        !(this.chart.is3d && this.chart.is3d())) {\n        var _c = this,\n            options = _c.options,\n            yAxis = _c.yAxis,\n            percent = options.stacking === 'percent',\n            seriesDefault = (_b = (_a = defaultOptions.plotOptions) === null || _a === void 0 ? void 0 : _a[this.type]) === null || _b === void 0 ? void 0 : _b.borderRadius,\n            borderRadius = optionsToObject(options.borderRadius,\n            isObject(seriesDefault) ? seriesDefault : {}),\n            reversed = yAxis.options.reversed;\n        for (var _i = 0, _d = this.points; _i < _d.length; _i++) {\n            var point = _d[_i];\n            var shapeArgs = point.shapeArgs;\n            if (point.shapeType === 'roundedRect' && shapeArgs) {\n                var _e = shapeArgs.width,\n                    width = _e === void 0 ? 0 : _e,\n                    _f = shapeArgs.height,\n                    height = _f === void 0 ? 0 : _f,\n                    _g = shapeArgs.y,\n                    y = _g === void 0 ? 0 : _g;\n                var brBoxY = y,\n                    brBoxHeight = height;\n                // It would be nice to refactor StackItem.getStackBox/\n                // setOffset so that we could get a reliable box out of\n                // it. Currently it is close if we remove the label\n                // offset, but we still need to run crispCol and also\n                // flip it if inverted, so atm it is simpler to do it\n                // like the below.\n                if (borderRadius.scope === 'stack' &&\n                    point.stackTotal) {\n                    var stackEnd = yAxis.translate(percent ? 100 : point.stackTotal,\n                        false,\n                        true,\n                        false,\n                        true),\n                        stackThreshold = yAxis.translate(options.threshold || 0,\n                        false,\n                        true,\n                        false,\n                        true),\n                        box = this.crispCol(0,\n                        Math.min(stackEnd,\n                        stackThreshold), 0,\n                        Math.abs(stackEnd - stackThreshold));\n                    brBoxY = box.y;\n                    brBoxHeight = box.height;\n                }\n                var flip = (point.negative ? -1 : 1) *\n                        (reversed ? -1 : 1) === -1;\n                // Handle the where option\n                var where = borderRadius.where;\n                // Waterfall, hanging columns should have rounding on\n                // all sides\n                if (!where &&\n                    this.is('waterfall') &&\n                    Math.abs((point.yBottom || 0) -\n                        (this.translatedThreshold || 0)) > this.borderWidth) {\n                    where = 'all';\n                }\n                if (!where) {\n                    where = 'end';\n                }\n                // Get the radius\n                var r = Math.min(relativeLength(borderRadius.radius,\n                    width),\n                    width / 2, \n                    // Cap to the height, but not if where is `end`\n                    where === 'all' ? height / 2 : Infinity) || 0;\n                // If the `where` option is 'end', cut off the\n                // rectangles by making the border-radius box one r\n                // greater, so that the imaginary radius falls outside\n                // the rectangle.\n                if (where === 'end') {\n                    if (flip) {\n                        brBoxY -= r;\n                        brBoxHeight += r;\n                    }\n                    else {\n                        brBoxHeight += r;\n                    }\n                }\n                extend(shapeArgs, { brBoxHeight: brBoxHeight, brBoxY: brBoxY, r: r });\n            }\n        }\n    }\n}\n/** @private */\nfunction compose(SeriesClass, SVGElementClass, SVGRendererClass) {\n    var PieSeriesClass = SeriesClass.types.pie;\n    if (!SVGElementClass.symbolCustomAttribs.includes('borderRadius')) {\n        var symbols = SVGRendererClass.prototype.symbols;\n        addEvent(SeriesClass, 'afterColumnTranslate', seriesOnAfterColumnTranslate, {\n            // After columnrange and polar column modifications\n            order: 9\n        });\n        addEvent(PieSeriesClass, 'afterTranslate', pieSeriesOnAfterTranslate);\n        SVGElementClass.symbolCustomAttribs.push('borderRadius', 'brBoxHeight', 'brBoxY');\n        oldArc = symbols.arc;\n        oldRoundedRect = symbols.roundedRect;\n        symbols.arc = arc;\n        symbols.roundedRect = roundedRect;\n    }\n}\n/** @private */\nfunction optionsToObject(options, seriesBROptions) {\n    if (!isObject(options)) {\n        options = { radius: options || 0 };\n    }\n    return merge(defaultBorderRadiusOptions, seriesBROptions, options);\n}\n/** @private */\nfunction pieSeriesOnAfterTranslate() {\n    var borderRadius = optionsToObject(this.options.borderRadius);\n    for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n        var point = _a[_i];\n        var shapeArgs = point.shapeArgs;\n        if (shapeArgs) {\n            shapeArgs.borderRadius = relativeLength(borderRadius.radius, (shapeArgs.r || 0) - ((shapeArgs.innerR) || 0));\n        }\n    }\n}\n/**\n * Extend roundedRect with individual cutting through rOffset.\n * @private\n */\nfunction roundedRect(x, y, width, height, options) {\n    if (options === void 0) { options = {}; }\n    var path = oldRoundedRect(x,\n        y,\n        width,\n        height,\n        options),\n        _a = options.r,\n        r = _a === void 0 ? 0 : _a,\n        _b = options.brBoxHeight,\n        brBoxHeight = _b === void 0 ? height : _b,\n        _c = options.brBoxY,\n        brBoxY = _c === void 0 ? y : _c,\n        brOffsetTop = y - brBoxY,\n        brOffsetBtm = (brBoxY + brBoxHeight) - (y + height), \n        // When the distance to the border-radius box is greater than the r\n        // itself, it means no border radius. The -0.1 accounts for float\n        // rounding errors.\n        rTop = (brOffsetTop - r) > -0.1 ? 0 : r,\n        rBtm = (brOffsetBtm - r) > -0.1 ? 0 : r,\n        cutTop = Math.max(rTop && brOffsetTop, 0),\n        cutBtm = Math.max(rBtm && brOffsetBtm, 0);\n    /*\n\n    The naming of control points:\n\n      / a -------- b \\\n     /                \\\n    h                  c\n    |                  |\n    |                  |\n    |                  |\n    g                  d\n     \\                /\n      \\ f -------- e /\n\n    */\n    var a = [x + rTop,\n        y],\n        b = [x + width - rTop,\n        y],\n        c = [x + width,\n        y + rTop],\n        d = [\n            x + width,\n        y + height - rBtm\n        ],\n        e = [\n            x + width - rBtm,\n            y + height\n        ],\n        f = [x + rBtm,\n        y + height],\n        g = [x,\n        y + height - rBtm],\n        h = [x,\n        y + rTop];\n    var applyPythagoras = function (r,\n        altitude) { return Math.sqrt(Math.pow(r, 2) - Math.pow(altitude, 2)); };\n    // Inside stacks, cut off part of the top\n    if (cutTop) {\n        var base = applyPythagoras(rTop,\n            rTop - cutTop);\n        a[0] -= base;\n        b[0] += base;\n        c[1] = h[1] = y + rTop - cutTop;\n    }\n    // Column is lower than the radius. Cut off bottom inside the top\n    // radius.\n    if (height < rTop - cutTop) {\n        var base = applyPythagoras(rTop,\n            rTop - cutTop - height);\n        c[0] = d[0] = x + width - rTop + base;\n        e[0] = Math.min(c[0], e[0]);\n        f[0] = Math.max(d[0], f[0]);\n        g[0] = h[0] = x + rTop - base;\n        c[1] = h[1] = y + height;\n    }\n    // Inside stacks, cut off part of the bottom\n    if (cutBtm) {\n        var base = applyPythagoras(rBtm,\n            rBtm - cutBtm);\n        e[0] += base;\n        f[0] -= base;\n        d[1] = g[1] = y + height - rBtm + cutBtm;\n    }\n    // Cut off top inside the bottom radius\n    if (height < rBtm - cutBtm) {\n        var base = applyPythagoras(rBtm,\n            rBtm - cutBtm - height);\n        c[0] = d[0] = x + width - rBtm + base;\n        b[0] = Math.min(c[0], b[0]);\n        a[0] = Math.max(d[0], a[0]);\n        g[0] = h[0] = x + rBtm - base;\n        d[1] = g[1] = y;\n    }\n    // Preserve the box for data labels\n    path.length = 0;\n    path.push(__spreadArray(['M'], a, true), __spreadArray(['L'], b, true), __spreadArray(['A', rTop, rTop, 0, 0, 1], c, true), __spreadArray(['L'], d, true), __spreadArray(['A', rBtm, rBtm, 0, 0, 1], e, true), __spreadArray(['L'], f, true), __spreadArray(['A', rBtm, rBtm, 0, 0, 1], g, true), __spreadArray(['L'], h, true), __spreadArray(['A', rTop, rTop, 0, 0, 1], a, true), ['Z']);\n    return path;\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar BorderRadius = {\n    compose: compose,\n    optionsToObject: optionsToObject\n};\n/* harmony default export */ var Extensions_BorderRadius = (BorderRadius);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Detailed options for border radius.\n *\n * @sample  {highcharts} highcharts/plotoptions/column-borderradius/\n *          Rounded columns\n * @sample  highcharts/plotoptions/series-border-radius\n *          Column and pie with rounded border\n *\n * @interface Highcharts.BorderRadiusOptionsObject\n */ /**\n* The border radius. A number signifies pixels. A percentage string, like for\n* example `50%`, signifies a relative size. For columns this is relative to the\n* column width, for pies it is relative to the radius and the inner radius.\n*\n* @name Highcharts.BorderRadiusOptionsObject#radius\n* @type {string|number}\n*/ /**\n* The scope of the rounding for column charts. In a stacked column chart, the\n* value `point` means each single point will get rounded corners. The value\n* `stack` means the rounding will apply to the full stack, so that only points\n* close to the top or bottom will receive rounding.\n*\n* @name Highcharts.BorderRadiusOptionsObject#scope\n* @validvalue [\"point\", \"stack\"]\n* @type {string}\n*/ /**\n* For column charts, where in the point or stack to apply rounding. The `end`\n* value means only those corners at the point value will be rounded, leaving\n* the corners at the base or threshold unrounded. This is the most intuitive\n* behaviour. The `all` value means also the base will be rounded.\n*\n* @name Highcharts.BorderRadiusOptionsObject#where\n* @validvalue [\"all\", \"end\"]\n* @type {string}\n* @default end\n*/\n(''); // Keeps doclets above in JS file\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"SeriesRegistry\"],\"commonjs\":[\"highcharts\",\"SeriesRegistry\"],\"commonjs2\":[\"highcharts\",\"SeriesRegistry\"],\"root\":[\"Highcharts\",\"SeriesRegistry\"]}\nvar highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_ = __webpack_require__(512);\nvar highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default = /*#__PURE__*/__webpack_require__.n(highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_);\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Color\"],\"commonjs\":[\"highcharts\",\"Color\"],\"commonjs2\":[\"highcharts\",\"Color\"],\"root\":[\"Highcharts\",\"Color\"]}\nvar highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_ = __webpack_require__(620);\nvar highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default = /*#__PURE__*/__webpack_require__.n(highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_);\n;// ./code/es5/es-modules/Core/Axis/Color/ColorAxisLike.js\n/* *\n *\n *  (c) 2010-2024 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nvar color = (highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default()).parse;\n\nvar ColorAxisLike_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Namespace\n *\n * */\nvar ColorAxisLike;\n(function (ColorAxisLike) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initialize defined data classes.\n     * @private\n     */\n    function initDataClasses(userOptions) {\n        var axis = this,\n            chart = axis.chart,\n            legendItem = axis.legendItem = axis.legendItem || {},\n            options = axis.options,\n            userDataClasses = userOptions.dataClasses || [];\n        var dataClass,\n            dataClasses,\n            colorCount = chart.options.chart.colorCount,\n            colorCounter = 0,\n            colors;\n        axis.dataClasses = dataClasses = [];\n        legendItem.labels = [];\n        for (var i = 0, iEnd = userDataClasses.length; i < iEnd; ++i) {\n            dataClass = userDataClasses[i];\n            dataClass = ColorAxisLike_merge(dataClass);\n            dataClasses.push(dataClass);\n            if (!chart.styledMode && dataClass.color) {\n                continue;\n            }\n            if (options.dataClassColor === 'category') {\n                if (!chart.styledMode) {\n                    colors = chart.options.colors || [];\n                    colorCount = colors.length;\n                    dataClass.color = colors[colorCounter];\n                }\n                dataClass.colorIndex = colorCounter;\n                // Loop back to zero\n                colorCounter++;\n                if (colorCounter === colorCount) {\n                    colorCounter = 0;\n                }\n            }\n            else {\n                dataClass.color = color(options.minColor).tweenTo(color(options.maxColor), iEnd < 2 ? 0.5 : i / (iEnd - 1) // #3219\n                );\n            }\n        }\n    }\n    ColorAxisLike.initDataClasses = initDataClasses;\n    /**\n     * Create initial color stops.\n     * @private\n     */\n    function initStops() {\n        var axis = this,\n            options = axis.options,\n            stops = axis.stops = options.stops || [\n                [0,\n            options.minColor || ''],\n                [1,\n            options.maxColor || '']\n            ];\n        for (var i = 0, iEnd = stops.length; i < iEnd; ++i) {\n            stops[i].color = color(stops[i][1]);\n        }\n    }\n    ColorAxisLike.initStops = initStops;\n    /**\n     * Normalize logarithmic values.\n     * @private\n     */\n    function normalizedValue(value) {\n        var axis = this,\n            max = axis.max || 0,\n            min = axis.min || 0;\n        if (axis.logarithmic) {\n            value = axis.logarithmic.log2lin(value);\n        }\n        return 1 - ((max - value) /\n            ((max - min) || 1));\n    }\n    ColorAxisLike.normalizedValue = normalizedValue;\n    /**\n     * Translate from a value to a color.\n     * @private\n     */\n    function toColor(value, point) {\n        var axis = this;\n        var dataClasses = axis.dataClasses;\n        var stops = axis.stops;\n        var pos,\n            from,\n            to,\n            color,\n            dataClass,\n            i;\n        if (dataClasses) {\n            i = dataClasses.length;\n            while (i--) {\n                dataClass = dataClasses[i];\n                from = dataClass.from;\n                to = dataClass.to;\n                if ((typeof from === 'undefined' || value >= from) &&\n                    (typeof to === 'undefined' || value <= to)) {\n                    color = dataClass.color;\n                    if (point) {\n                        point.dataClass = i;\n                        point.colorIndex = dataClass.colorIndex;\n                    }\n                    break;\n                }\n            }\n        }\n        else {\n            pos = axis.normalizedValue(value);\n            i = stops.length;\n            while (i--) {\n                if (pos > stops[i][0]) {\n                    break;\n                }\n            }\n            from = stops[i] || stops[i + 1];\n            to = stops[i + 1] || from;\n            // The position within the gradient\n            pos = 1 - (to[0] - pos) / ((to[0] - from[0]) || 1);\n            color = from.color.tweenTo(to.color, pos);\n        }\n        return color;\n    }\n    ColorAxisLike.toColor = toColor;\n})(ColorAxisLike || (ColorAxisLike = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Color_ColorAxisLike = (ColorAxisLike);\n\n;// ./code/es5/es-modules/Core/Axis/SolidGaugeAxis.js\n/* *\n *\n *  (c) 2010-2024 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nvar SolidGaugeAxis_extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction init(axis) {\n    SolidGaugeAxis_extend(axis, Color_ColorAxisLike);\n}\n/* *\n *\n *  Default export\n *\n * */\nvar SolidGaugeAxis = {\n    init: init\n};\n/* harmony default export */ var Axis_SolidGaugeAxis = (SolidGaugeAxis);\n\n;// ./code/es5/es-modules/Series/SolidGauge/SolidGaugeSeriesDefaults.js\n/* *\n *\n *  Solid angular gauge module\n *\n *  (c) 2010-2024 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A solid gauge is a circular gauge where the value is indicated by a filled\n * arc, and the color of the arc may variate with the value.\n *\n * @sample highcharts/demo/gauge-solid/\n *         Solid gauges\n *\n * @extends      plotOptions.gauge\n * @excluding    dial, pivot, wrap\n * @product      highcharts\n * @requires     modules/solid-gauge\n * @optionparent plotOptions.solidgauge\n */\nvar SolidGaugeSeriesDefaults = {\n    /**\n     * The inner radius for points in a solid gauge. Can be given only in\n     * percentage, either as a number or a string like `\"50%\"`.\n     *\n     * @sample {highcharts} highcharts/plotoptions/solidgauge-radius/\n     *         Individual radius and innerRadius\n     *\n     * @type      {string}\n     * @default   \"60%\"\n     * @since     4.1.6\n     * @product   highcharts\n     * @apioption plotOptions.solidgauge.innerRadius\n     */\n    /**\n     * Whether the strokes of the solid gauge should be `round` or `square`.\n     *\n     * @sample {highcharts} highcharts/demo/gauge-multiple-kpi/\n     *         Rounded gauge\n     *\n     * @type       {string}\n     * @default    round\n     * @since      4.2.2\n     * @product    highcharts\n     * @validvalue [\"square\", \"round\"]\n     * @apioption  plotOptions.solidgauge.linecap\n     */\n    /**\n     * Allow the gauge to overshoot the end of the perimeter axis by this\n     * many degrees. Say if the gauge axis goes from 0 to 60, a value of\n     * 100, or 1000, will show 5 degrees beyond the end of the axis when this\n     * option is set to 5.\n     *\n     * @type      {number}\n     * @default   0\n     * @since     3.0.10\n     * @product   highcharts\n     * @apioption plotOptions.solidgauge.overshoot\n     */\n    /**\n     * The outer radius for points in a solid gauge. Can be given only in\n     * percentage, either as a number or a string like `\"100%\"`.\n     *\n     * @sample {highcharts} highcharts/plotoptions/solidgauge-radius/\n     *         Individual radius and innerRadius\n     *\n     * @type      {string}\n     * @default   \"100%\"\n     * @since     4.1.6\n     * @product   highcharts\n     * @apioption plotOptions.solidgauge.radius\n     */\n    /**\n     * Whether to draw rounded edges on the gauge. This options adds the radius\n     * of the rounding to the ends of the arc, so it extends past the actual\n     * values. When `borderRadius` is set, it takes precedence over `rounded`. A\n     * `borderRadius` of 50% behaves like `rounded`, except the shape is not\n     * extended past its value.\n     *\n     * @sample {highcharts} highcharts/demo/gauge-multiple-kpi/\n     *         Gauge showing multiple KPIs\n     *\n     * @type      {boolean}\n     * @default   false\n     * @since     5.0.8\n     * @product   highcharts\n     * @apioption plotOptions.solidgauge.rounded\n     */\n    /**\n     * The threshold or base level for the gauge.\n     *\n     * @sample {highcharts} highcharts/plotoptions/solidgauge-threshold/\n     *         Zero threshold with negative and positive values\n     *\n     * @type      {number|null}\n     * @since     5.0.3\n     * @product   highcharts\n     * @apioption plotOptions.solidgauge.threshold\n     */\n    /**\n     * Whether to give each point an individual color.\n     */\n    colorByPoint: true,\n    dataLabels: {\n        y: 0\n    }\n};\n/**\n * A `solidgauge` series. If the [type](#series.solidgauge.type) option is not\n * specified, it is inherited from [chart.type](#chart.type).\n *\n *\n * @extends   series,plotOptions.solidgauge\n * @excluding animationLimit, boostThreshold, connectEnds, connectNulls,\n *            cropThreshold, dashStyle, dataParser, dataURL, dial,\n *            findNearestPointBy, getExtremesFromAll, marker, negativeColor,\n *            pointPlacement, pivot, shadow, softThreshold, stack, stacking,\n *            states, step, threshold, turboThreshold, wrap, zoneAxis, zones,\n *            dataSorting, boostBlending\n * @product   highcharts\n * @requires  modules/solid-gauge\n * @apioption series.solidgauge\n */\n/**\n * An array of data points for the series. For the `solidgauge` series\n * type, points can be given in the following ways:\n *\n * 1. An array of numerical values. In this case, the numerical values will be\n *    interpreted as `y` options. Example:\n *    ```js\n *    data: [0, 5, 3, 5]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.solidgauge.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        y: 5,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        y: 7,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * The typical gauge only contains a single data value.\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<number|null|*>}\n * @extends   series.gauge.data\n * @product   highcharts\n * @apioption series.solidgauge.data\n */\n/**\n * The inner radius of an individual point in a solid gauge. Can be given only\n * in percentage, either as a number or a string like `\"50%\"`.\n *\n * @sample {highcharts} highcharts/plotoptions/solidgauge-radius/\n *         Individual radius and innerRadius\n *\n * @type      {string}\n * @since     4.1.6\n * @product   highcharts\n * @apioption series.solidgauge.data.innerRadius\n */\n/**\n * The outer radius of an individual point in a solid gauge. Can be\n * given only in percentage, either as a number or a string like `\"100%\"`.\n *\n * @sample {highcharts} highcharts/plotoptions/solidgauge-radius/\n *         Individual radius and innerRadius\n *\n * @type      {string}\n * @since     4.1.6\n * @product   highcharts\n * @apioption series.solidgauge.data.radius\n */\n''; // Keeps doclets above separate\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var SolidGauge_SolidGaugeSeriesDefaults = (SolidGaugeSeriesDefaults);\n\n;// ./code/es5/es-modules/Series/SolidGauge/SolidGaugeSeries.js\n/* *\n *\n *  Solid angular gauge module\n *\n *  (c) 2010-2024 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar _a = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes, GaugeSeries = _a.gauge, PieSeries = _a.pie;\n\n\n\nvar clamp = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).clamp, SolidGaugeSeries_extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend, isNumber = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isNumber, SolidGaugeSeries_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick, pInt = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pInt;\n/* *\n *\n *  Class\n *\n * */\n/**\n * SolidGauge series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.solidgauge\n *\n * @augments Highcarts.Series\n */\nvar SolidGaugeSeries = /** @class */ (function (_super) {\n    __extends(SolidGaugeSeries, _super);\n    function SolidGaugeSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    // Extend the translate function to extend the Y axis with the necessary\n    // decoration (#5895).\n    SolidGaugeSeries.prototype.translate = function () {\n        var axis = this.yAxis;\n        Axis_SolidGaugeAxis.init(axis);\n        // Prepare data classes\n        if (!axis.dataClasses && axis.options.dataClasses) {\n            axis.initDataClasses(axis.options);\n        }\n        axis.initStops();\n        // Generate points and inherit data label position\n        GaugeSeries.prototype.translate.call(this);\n    };\n    // Draw the points where each point is one needle.\n    SolidGaugeSeries.prototype.drawPoints = function () {\n        var series = this,\n            yAxis = series.yAxis,\n            center = yAxis.center,\n            options = series.options,\n            renderer = series.chart.renderer,\n            overshoot = options.overshoot,\n            rounded = options.rounded && options.borderRadius === void 0,\n            overshootVal = isNumber(overshoot) ?\n                overshoot / 180 * Math.PI :\n                0;\n        var thresholdAngleRad;\n        // Handle the threshold option\n        if (isNumber(options.threshold)) {\n            thresholdAngleRad = yAxis.startAngleRad + yAxis.translate(options.threshold, void 0, void 0, void 0, true);\n        }\n        this.thresholdAngleRad = pick(thresholdAngleRad, yAxis.startAngleRad);\n        for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n            var point = _a[_i];\n            // #10630 null point should not be draw\n            if (!point.isNull) { // Condition like in pie chart\n                var radius = ((pInt(pick(point.options.radius, options.radius, 100 // %\n                    )) * center[2]) / 200), innerRadius = ((pInt(pick(point.options.innerRadius, options.innerRadius, 60 // %\n                    )) * center[2]) / 200), axisMinAngle = Math.min(yAxis.startAngleRad, yAxis.endAngleRad), axisMaxAngle = Math.max(yAxis.startAngleRad, yAxis.endAngleRad);\n                var graphic = point.graphic,\n                    rotation = (yAxis.startAngleRad +\n                        yAxis.translate(point.y,\n                    void 0,\n                    void 0,\n                    void 0,\n                    true)),\n                    shapeArgs = void 0,\n                    d = void 0,\n                    toColor = yAxis.toColor(point.y,\n                    point);\n                if (toColor === 'none') { // #3708\n                    toColor = point.color || series.color || 'none';\n                }\n                if (toColor !== 'none') {\n                    point.color = toColor;\n                }\n                // Handle overshoot and clipping to axis max/min\n                rotation = clamp(rotation, axisMinAngle - overshootVal, axisMaxAngle + overshootVal);\n                // Handle the wrap option\n                if (options.wrap === false) {\n                    rotation = clamp(rotation, axisMinAngle, axisMaxAngle);\n                }\n                var angleOfRounding = rounded ?\n                        ((radius - innerRadius) / 2) / radius :\n                        0, start = Math.min(rotation, series.thresholdAngleRad) -\n                        angleOfRounding;\n                var end = Math.max(rotation,\n                    series.thresholdAngleRad) +\n                        angleOfRounding;\n                if (end - start > 2 * Math.PI) {\n                    end = start + 2 * Math.PI;\n                }\n                var borderRadius = rounded ? '50%' : 0;\n                if (options.borderRadius) {\n                    borderRadius = Extensions_BorderRadius.optionsToObject(options.borderRadius).radius;\n                }\n                point.shapeArgs = shapeArgs = {\n                    x: center[0],\n                    y: center[1],\n                    r: radius,\n                    innerR: innerRadius,\n                    start: start,\n                    end: end,\n                    borderRadius: borderRadius\n                };\n                point.startR = radius; // For PieSeries.animate\n                if (graphic) {\n                    d = shapeArgs.d;\n                    graphic.animate(SolidGaugeSeries_extend({ fill: toColor }, shapeArgs));\n                    if (d) {\n                        shapeArgs.d = d; // Animate alters it\n                    }\n                }\n                else {\n                    point.graphic = graphic = renderer.arc(shapeArgs)\n                        .attr({\n                        fill: toColor,\n                        'sweep-flag': 0\n                    })\n                        .add(series.group);\n                }\n                if (!series.chart.styledMode) {\n                    if (options.linecap !== 'square') {\n                        graphic.attr({\n                            'stroke-linecap': 'round',\n                            'stroke-linejoin': 'round'\n                        });\n                    }\n                    graphic.attr({\n                        stroke: options.borderColor || 'none',\n                        'stroke-width': options.borderWidth || 0\n                    });\n                }\n                if (graphic) {\n                    graphic.addClass(point.getClassName(), true);\n                }\n            }\n        }\n    };\n    // Extend the pie slice animation by animating from start angle and up.\n    SolidGaugeSeries.prototype.animate = function (init) {\n        if (!init) {\n            this.startAngleRad = this.thresholdAngleRad;\n            PieSeries.prototype.animate.call(this, init);\n        }\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    SolidGaugeSeries.defaultOptions = SolidGaugeSeries_merge(GaugeSeries.defaultOptions, SolidGauge_SolidGaugeSeriesDefaults);\n    return SolidGaugeSeries;\n}(GaugeSeries));\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('solidgauge', SolidGaugeSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var SolidGauge_SolidGaugeSeries = ((/* unused pure expression or super */ null && (SolidGaugeSeries)));\n\n;// ./code/es5/es-modules/masters/modules/solid-gauge.src.js\n\n\n\n\n/* harmony default export */ var solid_gauge_src = ((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()));\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],"names":["root","factory","exports","module","require","define","amd","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__512__","__WEBPACK_EXTERNAL_MODULE__620__","ColorAxisLike","extendStatics","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__","solid_gauge_src","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default","isObject","defaultOptions","noop","addEvent","extend","merge","defaultBorderRadiusOptions","relativeLength","radius","scope","where","Extensions_BorderRadius","optionsToObject","options","seriesBROptions","highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_","highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default","highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_","color","highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default","parse","ColorAxisLike_merge","initDataClasses","userOptions","dataClass","dataClasses","colors","chart","axis","legendItem","userDataClasses","colorCount","colorCounter","labels","i","iEnd","length","push","styledMode","dataClassColor","colorIndex","minColor","tweenTo","maxColor","initStops","stops","normalizedValue","value","max","min","logarithmic","log2lin","toColor","point","pos","from","to","Color_ColorAxisLike","SolidGaugeAxis_extend","SolidGauge_SolidGaugeSeriesDefaults","colorByPoint","dataLabels","y","__extends","b","setPrototypeOf","__proto__","Array","p","__","constructor","create","_a","seriesTypes","GaugeSeries","gauge","PieSeries","pie","clamp","SolidGaugeSeries_extend","isNumber","SolidGaugeSeries_merge","pick","pInt","SolidGaugeSeries","_super","apply","arguments","translate","yAxis","Axis_SolidGaugeAxis","drawPoints","thresholdAngleRad","series","center","renderer","overshoot","rounded","borderRadius","overshootVal","Math","PI","threshold","startAngleRad","_i","points","isNull","innerRadius","axisMinAngle","endAngleRad","axisMaxAngle","graphic","rotation","shapeArgs","wrap","angleOfRounding","start","end","x","r","innerR","startR","animate","fill","arc","attr","add","group","linecap","stroke","borderColor","borderWidth","addClass","getClassName","init","registerSeriesType"],"mappings":"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"}