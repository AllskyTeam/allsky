# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: [ push, pull_request, workflow_dispatch ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: some useful outputs
        run: |
          ls -la
          uptime
          echo make

      # Runs a set of commands using the runners shell
      - name: make deps
        run: |
          sudo make deps

      # Runs a set of commands using the runners shell
      - name: make all
        run: |
          sudo make all

      # Runs a set of commands using the runners shell
      - name: check bash files
        run: |
          err=0
          for i in $(find . -name '*.sh'); do
            echo "$i"
            bash -n $i
            if [ $? -ne 0 ]; then
              err=$((err + 1))
            fi
            case $i in
              ./variables.sh)
                #SC2034: ON_TTY appears unused. Verify use (or export if used externally).
                shellcheck $i -e SC2034 
                ;;
              ./gui/install.sh)
                #SC2155: Declare and assign separately to avoid masking return values.
                #SC2046: Quote this to prevent word splitting.
                #SC2086: Double quote to prevent globbing and word splitting.
                #SC1090: Can't follow non-constant source. Use a directive to specify location.
                #SC2164: Use 'cd ... || exit' or 'cd ... || return' in case cd fails.
                #SC2002: Useless cat. Consider 'cmd < file | ..' or 'cmd file | ..' instead.
                #SC2166: Prefer [ p ] || [ q ] as [ p -o q ] is not well defined.
                #SC2181: Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.
                shellcheck $i -e SC2155 -e SC2046 -e SC2086 -e SC1090 -e SC2164 -e SC2002 -e SC2166 -e SC2181
                ;;
              ./gui/install.sh)
                #SC2006: Use $(...) notation instead of legacy backticked `...`.
                shellcheck $i -e SC2006 
                ;;
              *)
                shellcheck $i
                ;;
            esac
            if [ $? -ne 0 ]; then
              err=$((err + 1))
            fi
          done
          echo $err
          exit $err
